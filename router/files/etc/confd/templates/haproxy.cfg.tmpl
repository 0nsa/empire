# TODO: ELB healthcheck

global
    log /dev/log    local0 debug
    user haproxy
    group haproxy
    stats socket /run/haproxy.sock

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    contimeout 5000
    clitimeout 50000
    srvtimeout 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

listen stats :1936
    mode http
    stats enable
    stats hide-version
    stats uri /

frontend router
    mode http
    log global
    bind *:80
    monitor-uri /router_health
    default_backend nobackend
    {{range $dir := lsdir "/services/web"}} {{$app := base $dir}} {{$domainDir := printf "/empire/domains/%s" $app}} {{$aclName := printf "%s_default" $app}}
    # Default for {{$app}}
    acl {{$aclName}} hdr_beg(host) -i {{$app}}.
    use_backend {{$app}} if {{$aclName}}

    # Configured domains for {{$app}} {{range $dom := ls $domainDir}}{{$aclName := printf "%s_domain" $dom}}
    acl {{$aclName}} hdr(host) -i {{$dom}}
    use_backend {{$app}} if {{$aclName}}
        {{end}} {{end}}
{{range $dir := lsdir "/services/web"}}{{$app := base $dir}}{{$webdir := printf "/services/web/%s/*" $dir}}
backend {{$app}}
    mode http
    option log-health-checks
    log global
    {{range gets $webdir}}server {{base .Key}} {{.Value}} check
    {{end}}
{{end}}
    

backend nobackend
    log global
    errorfile 503 /etc/haproxy/errors/nobackend.http
