#!/bin/bash

set -e

check_dep() {
  command -v $1 >/dev/null 2>&1 || { printf >&2 "%s is required but not installed. Aborting.\n" $1; exit 1; }
}

# Returns the value of a named output from the created stack.
output() {
  aws cloudformation describe-stacks --stack-name $STACK --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue]' --output text | grep $1 | cut -f 2
}

# only works in us-east-1 for now
export AWS_DEFAULT_REGION=us-east-1

check_dep "aws"

# This variable will be used as the cloudformation stack name and the associated
# ECS cluster.
MD5=""
[ -x /sbin/md5 ] && MD5=$(date | /sbin/md5 | head -c 8)
[ -x /usr/bin/md5sum ] && MD5=$(date | /usr/sbin/md5sum | head -c 8)
if [ -z ${MD5} ]
then
    echo "No /sbin/md5 or /usr/sbin/md5sum found on system, switching to default name"
    MD5=my-stack
fi
DEFAULT_STACK="empire-${MD5}"
STACK="${STACK:-${DEFAULT_STACK}}"

# TODO: make it so people can override this with envvars
ZONES=$(aws ec2 describe-availability-zones --query 'AvailabilityZones[*].ZoneName' --output text | awk '{print $1, $2}')

# have to escape commas in parameters for aws cli
SAFEZONES=$(echo $ZONES | sed -e 's/ /\\,/g')

read -p "AWS SSH KeyName: " keyname
read -p "Do you have a docker account & want to use it for private repo access? [y/N] " private_docker

private_docker=$(echo $private_docker | tr '[a-z]' '[A-Z'])
DEFAULT_DOCKER_REGISTRY="https://index.docker.io/v1/"

AWSCMD="aws cloudformation create-stack --stack-name "$STACK" --template-body file://$PWD/docs/cloudformation.json --capabilities CAPABILITY_IAM"

PARAMETERS="ParameterKey=DesiredCapacity,ParameterValue=5 ParameterKey=MaxCapacity,ParameterValue=10 ParameterKey=AvailabilityZones,ParameterValue=\"$SAFEZONES\" ParameterKey=KeyName,ParameterValue=$keyname"

if [ "$private_docker" == "Y" ]
then
    read -p "Docker registry ($DEFAULT_DOCKER_REGISTRY): " docker_registry
    [ -z "${docker_registry}" ] && docker_registry=$DEFAULT_DOCKER_REGISTRY

    read -p "Docker user: " docker_user
    read -s -p "Docker pass: " docker_pass
    printf "\n"
    read -p "Docker email: " docker_email


    PARAMETERS="${PARAMETERS} ParameterKey=DockerRegistry,ParameterValue='$docker_registry' ParameterKey=DockerUser,ParameterValue='$docker_user' ParameterKey=DockerPass,ParameterValue='$docker_pass' ParameterKey=DockerEmail,ParameterValue='$docker_email'"
fi

AWSCMD="${AWSCMD} --parameters ${PARAMETERS} > /dev/null"

echo "==> Launching empire in AZs: $ZONES, Cloudformation Stack $STACK"

eval $AWSCMD

printf "==> Waiting for stack to complete\n"
stack_status=""
while [ "$stack_status" != "CREATE_COMPLETE" ]; do
  sleep 1
  printf '\033[2K\r'
  printf "==> Status: %s" $stack_status
  stack_status=$(aws cloudformation describe-stacks --stack-name "$STACK" --output text --query 'Stacks[0].StackStatus' 2>/dev/null)
  if [ "$stack_status" == "ROLLBACK_COMPLETE" ]; then
    printf "\nStack creation failed, check AWS cloudformation console for details.\n"
    exit 1
  fi
done
echo
echo "==> Stack $STACK complete. Now run the following commands - when asked for a username, enter 'fake'. The password is blank:"
echo "$ export EMPIRE_API_URL=http://$(output ELBDNSName)/"
echo "$ emp login"
