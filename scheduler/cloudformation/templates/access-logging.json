{
  "Conditions": {
    "DNSCondition": {
      "Fn::Equals": [
        {
          "Ref": "DNS"
        },
        "true"
      ]
    }
  },
  "Outputs": {
    "Deployments": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Fn::Join": [
                "=",
                [
                  "web",
                  {
                    "Fn::GetAtt": [
                      "webService",
                      "DeploymentId"
                    ]
                  }
                ]
              ]
            },
            {
              "Fn::Join": [
                "=",
                [
                  "http",
                  {
                    "Fn::GetAtt": [
                      "httpService",
                      "DeploymentId"
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    },
    "EmpireVersion": {
      "Value": "x.x.x"
    },
    "Release": {
      "Value": "v1"
    },
    "Services": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Fn::Join": [
                "=",
                [
                  "web",
                  {
                    "Ref": "webService"
                  }
                ]
              ]
            },
            {
              "Fn::Join": [
                "=",
                [
                  "http",
                  {
                    "Ref": "httpService"
                  }
                ]
              ]
            }
          ]
        ]
      }
    }
  },
  "Parameters": {
    "DNS": {
      "Type": "String",
      "Description": "When set to `true`, CNAME's will be altered",
      "Default": "true"
    },
    "RestartKey": {
      "Type": "String",
      "Description": "Key used to trigger a restart of an app",
      "Default": "default"
    },
    "httpScale": {
      "Type": "String"
    },
    "webScale": {
      "Type": "String"
    }
  },
  "Resources": {
    "CNAME": {
      "Condition": "DNSCondition",
      "Properties": {
        "HostedZoneId": "Z3DG6IL3SJCGPX",
        "Name": "acme-inc.empire",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "webLoadBalancer",
              "DNSName"
            ]
          }
        ],
        "TTL": 60,
        "Type": "CNAME"
      },
      "Type": "AWS::Route53::RecordSet"
    },
    "httpAlias": {
      "Condition": "DNSCondition",
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "httpApplicationLoadBalancer",
              "DNSName"
            ]
          },
          "EvaluateTargetHealth": "true",
          "HostedZoneId": {
            "Fn::GetAtt": [
              "httpApplicationLoadBalancer",
              "CanonicalHostedZoneID"
            ]
          }
        },
        "HostedZoneId": "Z3DG6IL3SJCGPX",
        "Name": "http.acme-inc.empire",
        "Type": "A"
      },
      "Type": "AWS::Route53::RecordSet"
    },
    "httpApplicationLoadBalancer": {
      "Properties": {
        "LoadBalancerAttributes": [
          [
            {
              "Key": "access_logs.s3.enabled",
              "Value": true
            },
            {
              "Key": "access_logs.s3.bucket",
              "Value": "accesslogs"
            },
            {
              "Key": "access_logs.s3.prefix",
              "Value": "acme-inc/1234/http"
            }
          ]
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          "sg-e7387381"
        ],
        "Subnets": [
          "subnet-bb01c4cd",
          "subnet-c85f4091"
        ],
        "Tags": [
          {
            "Key": "environment",
            "Value": "test"
          },
          {
            "Key": "empire.app.process",
            "Value": "http"
          }
        ]
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
    },
    "httpApplicationLoadBalancerPort80Listener": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "httpTargetGroup"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "httpApplicationLoadBalancer"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener"
    },
    "httpService": {
      "DependsOn": [
        "httpApplicationLoadBalancerPort80Listener"
      ],
      "Properties": {
        "Cluster": "cluster",
        "DesiredCount": {
          "Ref": "httpScale"
        },
        "LoadBalancers": [
          {
            "ContainerName": "http",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "httpTargetGroup"
            }
          }
        ],
        "Role": "ecsServiceRole",
        "ServiceName": "acme-inc-http",
        "ServiceToken": "sns topic arn",
        "TaskDefinition": {
          "Ref": "httpTaskDefinition"
        }
      },
      "Type": "Custom::ECSService"
    },
    "httpTargetGroup": {
      "Properties": {
        "Port": 65535,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "environment",
            "Value": "test"
          },
          {
            "Key": "empire.app.process",
            "Value": "http"
          }
        ],
        "VpcId": ""
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
    },
    "httpTaskDefinition": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "./bin/web"
            ],
            "Cpu": 256,
            "DockerLabels": {
              "cloudformation.restart-key": {
                "Ref": "RestartKey"
              },
              "empire.app.process": "http"
            },
            "Environment": [
              {
                "Name": "LOAD_BALANCER_TYPE",
                "Value": "alb"
              },
              {
                "Name": "PORT",
                "Value": "8080"
              }
            ],
            "Essential": true,
            "Image": "remind101/acme-inc:latest",
            "Memory": 128,
            "Name": "http",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "HostPort": 0
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 256,
                "Name": "nproc",
                "SoftLimit": 256
              }
            ]
          }
        ],
        "Volumes": []
      },
      "Type": "AWS::ECS::TaskDefinition"
    },
    "web8080InstancePort": {
      "Properties": {
        "ServiceToken": "sns topic arn"
      },
      "Type": "Custom::InstancePort",
      "Version": "1.0"
    },
    "webAlias": {
      "Condition": "DNSCondition",
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "webLoadBalancer",
              "DNSName"
            ]
          },
          "EvaluateTargetHealth": "true",
          "HostedZoneId": {
            "Fn::GetAtt": [
              "webLoadBalancer",
              "CanonicalHostedZoneNameID"
            ]
          }
        },
        "HostedZoneId": "Z3DG6IL3SJCGPX",
        "Name": "web.acme-inc.empire",
        "Type": "A"
      },
      "Type": "AWS::Route53::RecordSet"
    },
    "webLoadBalancer": {
      "Properties": {
        "AccessLoggingPolicy": {
          "Enabled": true,
          "S3BucketName": "accesslogs",
          "S3BucketPrefix": "acme-inc/1234/web"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": 30
        },
        "CrossZone": true,
        "Listeners": [
          {
            "InstancePort": {
              "Fn::GetAtt": [
                "web8080InstancePort",
                "InstancePort"
              ]
            },
            "InstanceProtocol": "http",
            "LoadBalancerPort": 80,
            "Protocol": "http"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          "sg-e7387381"
        ],
        "Subnets": [
          "subnet-bb01c4cd",
          "subnet-c85f4091"
        ],
        "Tags": [
          {
            "Key": "empire.app.process",
            "Value": "web"
          }
        ]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "webService": {
      "Properties": {
        "Cluster": "cluster",
        "DesiredCount": {
          "Ref": "webScale"
        },
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 8080,
            "LoadBalancerName": {
              "Ref": "webLoadBalancer"
            }
          }
        ],
        "Role": "ecsServiceRole",
        "ServiceName": "acme-inc-web",
        "ServiceToken": "sns topic arn",
        "TaskDefinition": {
          "Ref": "webTaskDefinition"
        }
      },
      "Type": "Custom::ECSService"
    },
    "webTaskDefinition": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "./bin/web"
            ],
            "Cpu": 256,
            "DockerLabels": {
              "cloudformation.restart-key": {
                "Ref": "RestartKey"
              },
              "empire.app.process": "web"
            },
            "Environment": [
              {
                "Name": "PORT",
                "Value": "8080"
              }
            ],
            "Essential": true,
            "Image": "remind101/acme-inc:latest",
            "Memory": 128,
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "HostPort": {
                  "Fn::GetAtt": [
                    "web8080InstancePort",
                    "InstancePort"
                  ]
                }
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 256,
                "Name": "nproc",
                "SoftLimit": 256
              }
            ]
          }
        ],
        "Volumes": []
      },
      "Type": "AWS::ECS::TaskDefinition"
    }
  }
}